{"version":3,"sources":["../src/createField.jsx"],"names":["FormComponent","fieldType","props","name","delay","context","formControl","fields","init","createDelayValidateFunc","onFormChange","delayFunc","Component","propTypes","string","isRequired","number","contextTypes","object"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;;;AAEA;;;;;;kBAMe,UAACA,aAAD,EAAgBC,SAAhB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAoE;;AAApE,+BAWJ;AAAA,qBAKH,KAAKC,KALF;AAAA,YAELC,IAFK,UAELA,IAFK;AAAA,YAGLC,KAHK,UAGLA,KAHK;AAAA,YAIFF,KAJE;;AAAA,mCAaH,KAAKG,OAbF,CAOLC,WAPK;AAAA,YAQHC,MARG,wBAQHA,MARG;AAAA,YASHC,IATG,wBASHA,IATG;AAAA,YAUHC,uBAVG,wBAUHA,uBAVG;AAAA,YAWHC,YAXG,wBAWHA,YAXG;;AAeP;;AACA,YAAI,CAACH,OAAOJ,IAAP,CAAL,EAAmB;AACjB;AACAK,mCACGL,IADH,EACUF,cAAc,UAAd,GAA2B,EAA3B,GAAgC,EAD1C;AAGD;;AAED;AACA,YAAIG,SAAS,CAACG,OAAOJ,IAAP,EAAaQ,SAA3B,EAAsC;AACpCJ,iBAAOJ,IAAP,EAAaQ,SAAb,GAAyBF,wBAAwBL,KAAxB,CAAzB;AACD;;AAED,eACE,8BAAC,aAAD;AACE,gBAAMD,IADR;AAEE,iBAAOI,OAAOJ,IAAP,CAFT;AAGE,oBAAUO;AAHZ,WAIMR,KAJN,EADF;AAQD;AA/CY;;AAAA;AAAA,IAAkD,gBAAMU,SAAxD,UAENC,SAFM,GAEM;AACjBV,UAAM,oBAAUW,MAAV,CAAiBC,UADN;AAEjBX,WAAO,oBAAUY;AAFA,GAFN,SAONC,YAPM,GAOS;AACpBX,iBAAa,oBAAUY,MAAV,CAAiBH;AADV,GAPT;AAAA,C","file":"createField.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Field component\n * @param FormComponent\n * @param fieldType\n * @constructor\n */\nexport default (FormComponent, fieldType) => class Field extends React.Component { // eslint-disable-line\n\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    delay: PropTypes.number,\n  };\n\n  static contextTypes = {\n    formControl: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const {\n      name,\n      delay, // eslint-disable-line\n      ...props\n    } = this.props;\n    const {\n      formControl: {\n        fields,\n        init,\n        createDelayValidateFunc,\n        onFormChange,\n      },\n    } = this.context;\n\n    // Initialize field.\n    if (!fields[name]) {\n      // Checkbox uses an array\n      init({\n        [name]: fieldType === 'checkbox' ? [] : '',\n      });\n    }\n\n    // Async\n    if (delay && !fields[name].delayFunc) {\n      fields[name].delayFunc = createDelayValidateFunc(delay);\n    }\n\n    return (\n      <FormComponent\n        name={name}\n        field={fields[name]}\n        onChange={onFormChange}\n        {...props}\n      />\n    );\n  }\n};\n"]}